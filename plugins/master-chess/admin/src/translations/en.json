{
  "menu.section.models.name.": "Master Chess Service",
  "prompt.unsaved": "unsaved",
  "Save": "Save",
  "menu.section.models.attendance": "Attendance",
  "models.attendance.take.Attendance": "Take Attendance",
  "models.attendance.edit.Attendance": "Eite Attendance",
  "models.attendance.search.by.student.Attendance": "search by student",
  "models.attendance.search.by.course.Attendance": "search by course",
  "Attendances.TakeDate": " Date",
  "AttandeList.label": "The Attendance",
  "CenterList.label": "The Center ",
  "CourseList.label": " The Course",
  "StudentList.label": "The Student",
  "CourseList.load.defualt": "Select ...",
  "CenterList.error.onload": "Error in load Center List",
  "takeAttendances.success": "The attendances successfully saved",
  "attendances.update.success": "The attendances successfully updated",
  "takeAttendances.error": "Error in Take Attendances",
  "edit.error": "Error in update Data",
  "edit.success": "The data successfully updated",
  "table.tableEmptyText": "There is no data",
  "table.tableHeaderEmptyText": "Loading Header ...",
  "table.tableHeader.RowON": "#",
  "table.tableHeaer.stdName": "الطالب",
  "table.tableHeaer.courseName": "الدورة",
  "table.tableHeaer.amount": "القيمة",
  "table.tableHeaer.month": "الشهر",
  "table.tableHeaer.paymentDate": "تاريخ الدفع",
  "attendances.text.NO": "غ",
  "attendances.text.Yes": "حاضر",
  "attend.text.print": "print",
  "app.components.Button.cancel": "Cancel",
  "create.file.success": "The File successfully generated",
  "create.file.error": "Sorry, Some Error happened in generate file",

  "models.paymetn.take.payment": "Course Payment",
  "models.paymetn.edit.payment": "Edit Payment",
  "models.paymetn.search.payment.student": "search by student",
  "models.paymetn.search.payment.course": "search by Course",

  "models.paymetn.take.payment.Amount.Text": "Amount",
  "models.paymetn.take.payment.Date.Text": "Date",
  "models.paymetn.take.payment.Month.Text": "Payment Month",
  "paymetn.save.Required": "The Field is Required",
  "paymetn.save.amount.must.number": "The Amount is must be number",
  "payment.get.student.payment.error": "Error in get Student Payment",
  "takePayment.success": "The Payment successfully saved",
  "payment.student.no.have.record": "The Student does not have a Payment Record, Add one"
}
